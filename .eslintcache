[{"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\index.js":"1","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\serviceWorker.js":"2","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\App.js":"3","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\app\\store.js":"4","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\Counter.js":"5","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\Questionario\\index.js":"7","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionCheck\\index.js":"8","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\index.js":"9","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionInput\\index.js":"10","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Question\\index.js":"11","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\SetQuestions.js":"12","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\routes.js":"13","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\pages\\index.js":"14"},{"size":644,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":5141,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":428,"mtime":1611795503117,"results":"18","hashOfConfig":"16"},{"size":316,"mtime":1610897071324,"results":"19","hashOfConfig":"16"},{"size":1626,"mtime":499162500000,"results":"20","hashOfConfig":"16"},{"size":1551,"mtime":499162500000,"results":"21","hashOfConfig":"16"},{"size":6172,"mtime":1611525395041,"results":"22","hashOfConfig":"16"},{"size":4386,"mtime":1610984732706,"results":"23","hashOfConfig":"16"},{"size":4320,"mtime":1612027166765,"results":"24","hashOfConfig":"16"},{"size":1994,"mtime":1611431656973,"results":"25","hashOfConfig":"16"},{"size":787,"mtime":1612026697664,"results":"26","hashOfConfig":"16"},{"size":1563,"mtime":1611218240957,"results":"27","hashOfConfig":"16"},{"size":542,"mtime":1612027088202,"results":"28","hashOfConfig":"16"},{"size":1134,"mtime":1612048243895,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11ww82c",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\index.js",[],["66","67"],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\serviceWorker.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\App.js",["68","69"],"import Routes from './routes'\r\nimport { createMuiTheme, ThemeProvider  } from \"@material-ui/core/styles\";\r\nimport {  green, red } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\n   \r\n\r\nfunction App() {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#23461a',\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}><Routes></Routes></ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\app\\store.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\Counter.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\Questionario\\index.js",["70","71","72","73"],"import Card from '../components/ContactForm/Card'\nimport QuestionInput from '../components/ContactForm/QuestionInput'\nimport QuestionCheck from '../components/ContactForm/QuestionCheck'\n\n\nimport {\n  setQuestionsValue,\n  setQuestionsValue2,\n  setQuestionNumber,\n  selectquestionNumber\n\n  \n} from '../components/ContactForm/Card/SetQuestions';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './index.css';\n\n\nvar cards = [\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='1' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='2' \n                question={[\n                  <QuestionInput question='qual seu sobrenome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='3' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='4' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='5' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='6' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='7' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='8' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='9' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n\n\n              <Card \n                titulo='Simulador de Investimentos' \n                questionNumber='10' \n                question={[\n                  <QuestionInput question='qual seu nome?'/>, \n                  <QuestionCheck \n                    question='qual seu sexo?' \n                    optionsnumber={4} \n                    options= {['dormir', 'comer', 'beber', 'sentar']}\n                  />, \n                  <QuestionInput \n                    question='qual seu nome?' \n                  />\n                ]\n              }/>,\n            ]\n\nfunction App() {\n  const count = useSelector(selectquestionNumber);\n  return (\n    <div className=\"App\">\n      {cards[count]}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionCheck\\index.js",["74","75","76","77"],"import './index.css';\r\nimport React from 'react'\r\nimport Question from '../Question'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport lifecycle from 'react-pure-lifecycle';\r\n\r\n\r\nimport {\r\n  setOption\r\n} from '../Card/SetQuestions';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Card(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = React.useState({\r\n  });\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    dispatch(setOption({ ...state, [event.target.name]: event.target.checked }))\r\n  \r\n  \r\n  \r\n  };\r\n\r\n    function setQuestion(){\r\n      state.map(function(dale) {\r\n        alert(dale)\r\n      })\r\n    }\r\n  \r\n\r\n  \r\nvar options =    <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]} />}\r\n                      label={props.options[0]}\r\n                    />\r\n                  </FormGroup> \r\n\r\n\r\n\r\n  if(props.optionsnumber === 1 ){\r\n    options =    \r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]}/>}\r\n                        label={props.options[0]}\r\n                      />\r\n                    </FormGroup>\r\n                 \r\n  } else if (props.optionsnumber === 2){\r\n    options =   \r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]} />}\r\n                        label={props.options[0]}\r\n                      />\r\n                        <FormControlLabel\r\n                        control={ <Checkbox checked={state.checkedB} onChange={handleChange} name={props.options[1]} />}\r\n                        label={props.options[1]}\r\n                      />\r\n                    </FormGroup>\r\n                 \r\n                 \r\n\r\n  }else if (props.optionsnumber === 3){\r\n    options =        <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={ <Checkbox checked={state.checkedA} onChange={handleChange} name= {props.options[0]} />}\r\n                          label={props.options[0]}\r\n                        />\r\n                        <FormControlLabel\r\n                          control={ <Checkbox checked={state.checkedB} onChange={handleChange} name = {props.options[1]} />}\r\n                          label={props.options[1]}\r\n                        />\r\n                        <FormControlLabel\r\n                          control={ <Checkbox checked={state.checkedC} onChange={handleChange} name = {props.options[2]}/>}\r\n                          label={props.options[2]}\r\n                        />\r\n                      </FormGroup>\r\n\r\n  } else if (props.optionsnumber === 4){\r\n    options =     <FormGroup row> \r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]}/>}\r\n                      label={props.options[0]}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedB} onChange={handleChange} name={props.options[1]} />}\r\n                      label={props.options[1]}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedC} onChange={handleChange} name={props.options[2]} />}\r\n                      label={props.options[2]}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedD} onChange={handleChange} name={props.options[3]} />}\r\n                      label={props.options[3]}\r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n            <div><Question question={props.question}/></div>\r\n            <div className='rowinputs'>\r\n                {options}\r\n            </div>\r\n</div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Card","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\index.js",["78","79","80","81","82","83","84"],"import './index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FullsizePicture, Picture } from 'react-responsive-picture';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport {\r\n    setQuestionsValue,\r\n    setQuestionsValue2,\r\n    setQuestionNumber,\r\n    selectinputIsValid,\r\n    setinputIsValid\r\n  } from './SetQuestions';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nfunction CardComponent(props) {  \r\n  \r\n    const history = useHistory();\r\n\r\n\r\n\r\n    const inputIsValid = useSelector(selectinputIsValid)\r\n    \r\n    const dispatch = useDispatch();\r\n    const numberQuestions = props.question.length\r\n    \r\n\r\n  return (\r\n    <div style={{ height: 600 }}>\r\n    <FullsizePicture\r\n    src=\"http://localhost:3000/background.jpg\"\r\n    sizes=\"(height: 30px) 30px, 10px\">\r\n        \r\n    <div className=\"Card\">\r\n \r\n      \r\n        <div className='Content'>\r\n            <div className='Titulo'>{props.titulo}</div>\r\n            <div className='Progresso'>\r\n                <div></div>\r\n                <div>Progresso: {props.questionNumber}/10</div>\r\n            </div>\r\n            <div className='contentmain'>\r\n            {props.question.map(function(object, key){\r\n                return <div className='Question' key={key} id={'Questao'+key}>{object}</div>\r\n             })}\r\n            </div>\r\n\r\n            <div className='Footer'>\r\n                <div></div>\r\n\r\n                <div>\r\n                \r\n                <Button variant=\"contained\" color=\"primary\" \r\n                 onClick={function () { \r\n\r\n\r\n                    if(props.questionNumber === '10'){\r\n\r\n                        history.push(\"/relatorio\");                    \r\n                        return 0;\r\n                }\r\n\r\n\r\n                     var validate = []\r\n                    if(inputIsValid){\r\n                    props.question.map(function(item,key){\r\n                     try{\r\n                         var value = document.getElementById('Questao'+key).getElementsByClassName(\"MuiInput-input\")[0].value\r\n                         if(value.length >5)\r\n                            validate[key] = true\r\n                        else\r\n                            validate[key] = false\r\n                     \r\n                        dispatch(setQuestionsValue(value))\r\n                        } catch(err){\r\n                            console.log(err)\r\n\r\n                            try{\r\n                                \r\n                                dispatch(setQuestionsValue2())\r\n                               \r\n                            }catch (err){\r\n                                console.log(err)\r\n                            }\r\n                        }\r\n                 \r\n                        \r\n                    })\r\n                } else {\r\n                        console.log('oks')\r\n                    }\r\n\r\n                    \r\n                    var a = false\r\n\r\n\r\n                    for (var i = 0; i < validate.length; i++) {\r\n                        if (validate[i] === false) {\r\n                            a = false\r\n                            return 0\r\n                          break;\r\n                        }else {\r\n                            a = true\r\n                        }\r\n                      }\r\n              \r\n                    if(a){\r\n                        dispatch(setQuestionNumber())\r\n\r\n                        props.question.map(function(item,key){\r\n                            try{\r\n                                var value = document.getElementById('Questao'+key).getElementsByClassName(\"MuiInput-input\")[0].value\r\n                               } catch(err){\r\n                                   console.log(err)\r\n       \r\n                               }\r\n                            }\r\n\r\n\r\n                        )}\r\n\r\n                    else{\r\n                        console.log('a')\r\n                    }\r\n                        \r\n                }\r\n                \r\n                \r\n                }\r\n                >\r\n                    Proximo\r\n                </Button>\r\n                </div>\r\n            </div>\r\n            \r\n          \r\n          \r\n\r\n            \r\n        </div>\r\n\r\n    \r\n    </div>\r\n    </FullsizePicture>\r\n    </div>\r\n    \r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default CardComponent;\r\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionInput\\index.js",["85","86","87","88","89","90","91","92"],"import React from 'react';\r\nimport Question from '../Question'\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\n\r\nimport {\r\n  setQuestionsValue,\r\n  setQuestionsValue2,\r\n  setQuestionNumber,\r\n  selectquestionNumber,\r\n  setinputIsValid\r\n\r\n  \r\n} from '../Card/SetQuestions';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {connect} from 'react-redux'\r\n\r\n \r\nclass Card extends React.Component {\r\n \r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  \r\n    state = {\r\n        email: '',\r\n    }\r\n \r\n    handleChange = (event) => {\r\n        const email = event.target.value;\r\n        this.setState({ email });\r\n    }\r\n \r\n    handleSubmit = () => {\r\n        // your submit logic\r\n    }\r\n \r\n    render() {\r\n        const { email } = this.state;\r\n        ValidatorForm.addValidationRule('min', (value) => {\r\n          if (value.length < 5 ) {\r\n              this.props.idk(0)\r\n              return false;\r\n          }\r\n          this.props.idk(1)\r\n          return true;\r\n      });\r\n        return (\r\n          <div>\r\n          <div><Question question={this.props.question}/></div>\r\n            <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n                <TextValidator\r\n                    className='MuiInputBase-root'\r\n                    onChange={this.handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    validators={['min']}\r\n                    errorMessages={['this field is required', 'email is not valid']}\r\n                />\r\n            </ValidatorForm>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // dispatching plain actions\r\n    idk: (value) => dispatch(dispatch(setinputIsValid(value)))\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (Card);\r\n\r\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Question\\index.js",[],["93","94"],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\SetQuestions.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\routes.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\pages\\index.js",["95","96","97","98"],"import './index.css';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Email, Item, Span, A, renderEmail } from 'react-html-email'\r\n\r\n\r\n \r\n\r\n \r\nconst emailHTML = renderEmail(\r\n  <Email title=\"Hello World!\">\r\n    <Item align=\"center\">\r\n      <Span fontSize={20}>\r\n        This is an example email made with:\r\n        <A href=\"https://github.com/chromakode/react-html-email\">react-html-email</A>.\r\n      </Span>\r\n    </Item>\r\n  </Email>\r\n)\r\n\r\nfunction dale(email, mailcontent){\r\n    var sendmail = require('sendmail')({silent: true})\r\n    sendmail({\r\n      from: 'test@yourdomain.com',\r\n      to: 'thomazmatos@gmail.com',\r\n      replyTo: 'jason@yourdomain.com',\r\n      subject: 'MailComposer sendmail',\r\n      html: 'Mail of test sendmail '\r\n    }, function (err, reply) {\r\n      console.log(err && err.stack)\r\n      console.dir(reply)\r\n    })\r\n}\r\n\r\n\r\nfunction Relatorio(props) {\r\n  return (\r\n            <div>\r\n                {dale('thomazmatos@gmail.com')}\r\n            </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Relatorio;\r\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":11,"nodeType":"105","messageId":"106","endLine":3,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":3,"column":18,"nodeType":"105","messageId":"106","endLine":3,"endColumn":21},{"ruleId":"103","severity":1,"message":"108","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":7,"endColumn":20},{"ruleId":"103","severity":1,"message":"109","line":8,"column":3,"nodeType":"105","messageId":"106","endLine":8,"endColumn":21},{"ruleId":"103","severity":1,"message":"110","line":9,"column":3,"nodeType":"105","messageId":"106","endLine":9,"endColumn":20},{"ruleId":"103","severity":1,"message":"111","line":15,"column":23,"nodeType":"105","messageId":"106","endLine":15,"endColumn":34},{"ruleId":"103","severity":1,"message":"112","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":21},{"ruleId":"103","severity":1,"message":"113","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"114","line":42,"column":14,"nodeType":"105","messageId":"106","endLine":42,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":43,"column":17,"nodeType":"117","messageId":"118","endLine":43,"endColumn":25},{"ruleId":"103","severity":1,"message":"119","line":3,"column":27,"nodeType":"105","messageId":"106","endLine":3,"endColumn":34},{"ruleId":"103","severity":1,"message":"120","line":12,"column":5,"nodeType":"105","messageId":"106","endLine":12,"endColumn":20},{"ruleId":"103","severity":1,"message":"121","line":30,"column":11,"nodeType":"105","messageId":"106","endLine":30,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":72,"column":40,"nodeType":"117","messageId":"118","endLine":72,"endColumn":48},{"ruleId":"122","severity":1,"message":"123","line":107,"column":27,"nodeType":"124","messageId":"125","endLine":107,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":116,"column":44,"nodeType":"117","messageId":"118","endLine":116,"endColumn":52},{"ruleId":"103","severity":1,"message":"126","line":118,"column":37,"nodeType":"105","messageId":"106","endLine":118,"endColumn":42},{"ruleId":"103","severity":1,"message":"127","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"103","severity":1,"message":"108","line":8,"column":3,"nodeType":"105","messageId":"106","endLine":8,"endColumn":20},{"ruleId":"103","severity":1,"message":"109","line":9,"column":3,"nodeType":"105","messageId":"106","endLine":9,"endColumn":21},{"ruleId":"103","severity":1,"message":"110","line":10,"column":3,"nodeType":"105","messageId":"106","endLine":10,"endColumn":20},{"ruleId":"103","severity":1,"message":"128","line":11,"column":3,"nodeType":"105","messageId":"106","endLine":11,"endColumn":23},{"ruleId":"103","severity":1,"message":"112","line":17,"column":10,"nodeType":"105","messageId":"106","endLine":17,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":17,"column":23,"nodeType":"105","messageId":"106","endLine":17,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":23,"column":3,"nodeType":"131","messageId":"132","endLine":25,"endColumn":4},{"ruleId":"99","replacedBy":"133"},{"ruleId":"101","replacedBy":"134"},{"ruleId":"103","severity":1,"message":"135","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"136","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"137","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":18},{"ruleId":"103","severity":1,"message":"138","line":12,"column":7,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'green' is defined but never used.","Identifier","unusedVar","'red' is defined but never used.","'setQuestionsValue' is defined but never used.","'setQuestionsValue2' is defined but never used.","'setQuestionNumber' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'lifecycle' is defined but never used.","'setQuestion' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'Picture' is defined but never used.","'setinputIsValid' is defined but never used.","'numberQuestions' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'value' is assigned a value but never used.","'Button' is defined but never used.","'selectquestionNumber' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["139"],["140"],"'LabelIcon' is defined but never used.","'Badge' is defined but never used.","'Typography' is defined but never used.","'emailHTML' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]