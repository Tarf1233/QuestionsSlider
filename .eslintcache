[{"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\index.js":"1","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\serviceWorker.js":"2","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\App.js":"3","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\app\\store.js":"4","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\Counter.js":"5","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\Questionario\\index.js":"7","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionCheck\\index.js":"8","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\index.js":"9","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionInput\\index.js":"10","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Question\\index.js":"11","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\SetQuestions.js":"12","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\routes.js":"13","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\pages\\SendEmail\\index.js":"14","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\pages\\SendEmail\\components\\sendmail\\index.js":"15"},{"size":644,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":5141,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":425,"mtime":1612289276841,"results":"19","hashOfConfig":"17"},{"size":316,"mtime":1610897071324,"results":"20","hashOfConfig":"17"},{"size":1626,"mtime":499162500000,"results":"21","hashOfConfig":"17"},{"size":1551,"mtime":499162500000,"results":"22","hashOfConfig":"17"},{"size":1784,"mtime":1612294144467,"results":"23","hashOfConfig":"17"},{"size":4386,"mtime":1610984732706,"results":"24","hashOfConfig":"17"},{"size":4318,"mtime":1612306943198,"results":"25","hashOfConfig":"17"},{"size":2013,"mtime":1612294837961,"results":"26","hashOfConfig":"17"},{"size":787,"mtime":1612026697664,"results":"27","hashOfConfig":"17"},{"size":1845,"mtime":1612292774546,"results":"28","hashOfConfig":"17"},{"size":552,"mtime":1612294465653,"results":"29","hashOfConfig":"17"},{"size":249,"mtime":1612294531485,"results":"30","hashOfConfig":"17"},{"size":1947,"mtime":1612309785949,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11ww82c",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\index.js",[],["67","68"],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\serviceWorker.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\App.js",["69","70"],"import Routes from './routes'\r\nimport { createMuiTheme, ThemeProvider  } from \"@material-ui/core/styles\";\r\nimport {  green, red } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#23461a',\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}><Routes></Routes></ThemeProvider>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\app\\store.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\Counter.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\Questionario\\index.js",["71","72","73","74"],"import Card from '../components/ContactForm/Card'\nimport QuestionInput from '../components/ContactForm/QuestionInput'\nimport QuestionCheck from '../components/ContactForm/QuestionCheck'\n\n\nimport {\n  setQuestionsValue,\n  setQuestionsValue2,\n  setQuestionNumber,\n  selectquestionNumber,\n  selectAsks\n\n  \n} from '../components/ContactForm/Card/SetQuestions';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './index.css';\n\n\n\n\n\n\nfunction App() {\n\n  const asks = useSelector(selectAsks)\n\n\n  var cards = [\n    <Card \n      titulo='Simulador de Investimentos' \n      questionNumber={1}\n      question={[\n        <QuestionInput question={asks[0]} />, \n        <QuestionCheck \n          question={asks[1]} \n          optionsnumber={4} \n          options= {['dormir', 'comer', 'beber', 'sentar']}\n        />, \n        <QuestionInput \n          question={asks[2]} \n        />\n      ]\n    }/>,\n\n\n    <Card \n      titulo={asks[3]}\n      questionNumber={2}\n      question={[\n        <QuestionInput question='qual seu endereÃ§o?'/>, \n        <QuestionCheck \n          question={asks[4]}\n          optionsnumber={4} \n          options= {['100', '200', '300', '400']}\n        />, \n        <QuestionInput \n          question={asks[5]}\n        />\n      ]\n    }/>,\n\n    <Card \n      titulo={asks[5]}\n      questionNumber={3} \n      question={[\n        \n        <QuestionInput question={asks[7]}/>, \n\n        <QuestionCheck \n        question={asks[6]}\n        optionsnumber={3} \n        options= {['moderno', 'moderado', 'ousado']}\n      />, \n       \n        <QuestionInput \n          question={asks[8]}\n        />\n      ]\n    }/>,\n  ]\n\n\n\n\n  const count = useSelector(selectquestionNumber);\n  return (\n    <div className=\"App\">\n      {cards[count]}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionCheck\\index.js",["75","76","77","78"],"import './index.css';\r\nimport React from 'react'\r\nimport Question from '../Question'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport lifecycle from 'react-pure-lifecycle';\r\n\r\n\r\nimport {\r\n  setOption\r\n} from '../Card/SetQuestions';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Card(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = React.useState({\r\n  });\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    dispatch(setOption({ ...state, [event.target.name]: event.target.checked }))\r\n  \r\n  \r\n  \r\n  };\r\n\r\n    function setQuestion(){\r\n      state.map(function(dale) {\r\n        alert(dale)\r\n      })\r\n    }\r\n  \r\n\r\n  \r\nvar options =    <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]} />}\r\n                      label={props.options[0]}\r\n                    />\r\n                  </FormGroup> \r\n\r\n\r\n\r\n  if(props.optionsnumber === 1 ){\r\n    options =    \r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]}/>}\r\n                        label={props.options[0]}\r\n                      />\r\n                    </FormGroup>\r\n                 \r\n  } else if (props.optionsnumber === 2){\r\n    options =   \r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]} />}\r\n                        label={props.options[0]}\r\n                      />\r\n                        <FormControlLabel\r\n                        control={ <Checkbox checked={state.checkedB} onChange={handleChange} name={props.options[1]} />}\r\n                        label={props.options[1]}\r\n                      />\r\n                    </FormGroup>\r\n                 \r\n                 \r\n\r\n  }else if (props.optionsnumber === 3){\r\n    options =        <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={ <Checkbox checked={state.checkedA} onChange={handleChange} name= {props.options[0]} />}\r\n                          label={props.options[0]}\r\n                        />\r\n                        <FormControlLabel\r\n                          control={ <Checkbox checked={state.checkedB} onChange={handleChange} name = {props.options[1]} />}\r\n                          label={props.options[1]}\r\n                        />\r\n                        <FormControlLabel\r\n                          control={ <Checkbox checked={state.checkedC} onChange={handleChange} name = {props.options[2]}/>}\r\n                          label={props.options[2]}\r\n                        />\r\n                      </FormGroup>\r\n\r\n  } else if (props.optionsnumber === 4){\r\n    options =     <FormGroup row> \r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedA} onChange={handleChange} name={props.options[0]}/>}\r\n                      label={props.options[0]}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedB} onChange={handleChange} name={props.options[1]} />}\r\n                      label={props.options[1]}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedC} onChange={handleChange} name={props.options[2]} />}\r\n                      label={props.options[2]}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={ <Checkbox checked={state.checkedD} onChange={handleChange} name={props.options[3]} />}\r\n                      label={props.options[3]}\r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n            <div><Question question={props.question}/></div>\r\n            <div className='rowinputs'>\r\n                {options}\r\n            </div>\r\n</div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Card","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\index.js",["79","80","81","82","83","84","85"],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\QuestionInput\\index.js",["86","87","88","89","90","91","92","93"],"import React from 'react';\r\nimport Question from '../Question'\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\n\r\nimport {\r\n  setQuestionsValue,\r\n  setQuestionsValue2,\r\n  setQuestionNumber,\r\n  selectquestionNumber,\r\n  setinputIsValid\r\n\r\n  \r\n} from '../Card/SetQuestions';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {connect} from 'react-redux'\r\n\r\n \r\nclass Card extends React.Component {\r\n \r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  \r\n    state = {\r\n        email: '',\r\n    }\r\n \r\n    handleChange = (event) => {\r\n        const email = event.target.value;\r\n        this.setState({ email });\r\n    }\r\n \r\n    handleSubmit = () => {\r\n        // your submit logic\r\n    }\r\n \r\n    render() {\r\n        const { email } = this.state;\r\n        ValidatorForm.addValidationRule('min', (value) => {\r\n          if (value.length < 5 ) {\r\n              this.props.idk(0)\r\n              return false;\r\n          }\r\n          this.props.idk(1)\r\n          return true;\r\n      });\r\n        return (\r\n          <div>\r\n          <div><Question question={this.props.question}/></div>\r\n            <ValidatorForm\r\n                //ref=\"form\" tava dando erro \r\n                onSubmit={this.handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n                <TextValidator\r\n                    className='MuiInputBase-root'\r\n                    onChange={this.handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    validators={['min']}\r\n                    errorMessages={['this field is required', 'email is not valid']}\r\n                />\r\n            </ValidatorForm>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // dispatching plain actions\r\n    idk: (value) => dispatch(dispatch(setinputIsValid(value)))\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (Card);\r\n\r\n","C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Question\\index.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\components\\ContactForm\\Card\\SetQuestions.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\routes.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\pages\\SendEmail\\index.js",[],"C:\\Users\\null\\Desktop\\redux-essentials-example\\src\\features\\pages\\SendEmail\\components\\sendmail\\index.js",["94","95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":11,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":3,"column":18,"nodeType":"103","messageId":"104","endLine":3,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":7,"column":3,"nodeType":"103","messageId":"104","endLine":7,"endColumn":20},{"ruleId":"101","severity":1,"message":"107","line":8,"column":3,"nodeType":"103","messageId":"104","endLine":8,"endColumn":21},{"ruleId":"101","severity":1,"message":"108","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":20},{"ruleId":"101","severity":1,"message":"109","line":16,"column":23,"nodeType":"103","messageId":"104","endLine":16,"endColumn":34},{"ruleId":"101","severity":1,"message":"110","line":10,"column":10,"nodeType":"103","messageId":"104","endLine":10,"endColumn":21},{"ruleId":"101","severity":1,"message":"111","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":17},{"ruleId":"101","severity":1,"message":"112","line":42,"column":14,"nodeType":"103","messageId":"104","endLine":42,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":43,"column":17,"nodeType":"115","messageId":"116","endLine":43,"endColumn":25},{"ruleId":"101","severity":1,"message":"117","line":3,"column":27,"nodeType":"103","messageId":"104","endLine":3,"endColumn":34},{"ruleId":"101","severity":1,"message":"118","line":12,"column":5,"nodeType":"103","messageId":"104","endLine":12,"endColumn":20},{"ruleId":"101","severity":1,"message":"119","line":30,"column":11,"nodeType":"103","messageId":"104","endLine":30,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":67,"column":40,"nodeType":"115","messageId":"116","endLine":67,"endColumn":48},{"ruleId":"120","severity":1,"message":"121","line":102,"column":27,"nodeType":"122","messageId":"123","endLine":102,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":111,"column":44,"nodeType":"115","messageId":"116","endLine":111,"endColumn":52},{"ruleId":"101","severity":1,"message":"124","line":113,"column":37,"nodeType":"103","messageId":"104","endLine":113,"endColumn":42},{"ruleId":"101","severity":1,"message":"125","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"106","line":8,"column":3,"nodeType":"103","messageId":"104","endLine":8,"endColumn":20},{"ruleId":"101","severity":1,"message":"107","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":21},{"ruleId":"101","severity":1,"message":"108","line":10,"column":3,"nodeType":"103","messageId":"104","endLine":10,"endColumn":20},{"ruleId":"101","severity":1,"message":"126","line":11,"column":3,"nodeType":"103","messageId":"104","endLine":11,"endColumn":23},{"ruleId":"101","severity":1,"message":"110","line":17,"column":10,"nodeType":"103","messageId":"104","endLine":17,"endColumn":21},{"ruleId":"101","severity":1,"message":"109","line":17,"column":23,"nodeType":"103","messageId":"104","endLine":17,"endColumn":34},{"ruleId":"127","severity":1,"message":"128","line":23,"column":3,"nodeType":"129","messageId":"130","endLine":25,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":16,"column":5,"nodeType":"129","messageId":"130","endLine":19,"endColumn":8},{"ruleId":"131","severity":2,"message":"132","line":30,"column":35,"nodeType":"103","messageId":"133","endLine":30,"endColumn":44},{"ruleId":"131","severity":2,"message":"134","line":30,"column":75,"nodeType":"103","messageId":"133","endLine":30,"endColumn":85},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'green' is defined but never used.","Identifier","unusedVar","'red' is defined but never used.","'setQuestionsValue' is defined but never used.","'setQuestionsValue2' is defined but never used.","'setQuestionNumber' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'lifecycle' is defined but never used.","'setQuestion' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'Picture' is defined but never used.","'setinputIsValid' is defined but never used.","'numberQuestions' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'value' is assigned a value but never used.","'Button' is defined but never used.","'selectquestionNumber' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-undef","'responses' is not defined.","undef","'checkitems' is not defined.","no-global-assign","no-unsafe-negation"]